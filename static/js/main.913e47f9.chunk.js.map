{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["marked","require","App","props","onEditing","event","setState","inputText","target","value","preventDefault","state","bind","className","Badge","variant","id","Form","Group","controlId","Control","as","this","onChange","dangerouslySetInnerHTML","__html","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAMIA,EAASC,EAAQ,IAmFNC,E,kDAhFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAiCRC,UAAY,SAACC,GACX,EAAKC,SAAS,CACZC,UAAWF,EAAMG,OAAOC,QAE1BJ,EAAMK,kBApCN,EAAKC,MAAQ,CACXJ,UAAU,4xBA4BZ,EAAKH,UAAY,EAAKA,UAAUQ,KAAf,gBA/BA,E,0CAyCnB,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,6BACE,cAACC,EAAA,EAAD,CAAOD,UAAU,oBAAoBE,QAAQ,OAA7C,oCAGJ,sBAAKF,UAAU,WAAWG,GAAG,iBAA7B,UACE,qBAAKH,UAAU,kBAAf,SACE,6BACE,cAACC,EAAA,EAAD,CAAOD,UAAU,oBAAoBE,QAAQ,OAA7C,wBAGJ,+BACE,cAACE,EAAA,EAAKC,MAAN,CAAYC,UAAU,+BAAtB,SACE,cAACF,EAAA,EAAKG,QAAN,CAAcP,UAAU,iBAAiBQ,GAAG,WAAWZ,MAAOa,KAAKX,MAAMJ,UAAWgB,SAAUD,KAAKX,MAAMP,mBAI/G,sBAAKS,UAAU,WAAWG,GAAG,kBAA7B,UACE,qBAAKH,UAAU,kBAAf,SACE,6BACE,cAACC,EAAA,EAAD,CAAOD,UAAU,oBAAoBE,QAAQ,OAA7C,2BAGJ,qBAAKF,UAAU,aAAaW,wBAAyB,CAACC,OAAQzB,EAAOsB,KAAKX,MAAMJ,YAAaS,GAAG,0B,GAtE5FU,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.913e47f9.chunk.js","sourcesContent":["import React from 'react';\nimport Badge from \"react-bootstrap/Badge\";\nimport { Form } from \"react-bootstrap\";\nimport './App.css';\n\n\nlet marked = require(\"marked\");\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputText: `# Welcome to my React Markdown Previewer!\n\n      ## This is a sub-heading...\n      ### And here's some other cool stuff:\n      \n      \n      You can also make text **bold**... whoa!\n      Or _italic_.\n      Or... wait for it... **_both!_**\n      And feel free to go crazy ~~crossing stuff out~~.\n      \n      There's also [links](https://www.freecodecamp.com), and\n      \n      \n      - And of course there are lists.\n        - Some are bulleted.\n           - With different indentation levels.\n              - That look like this.\n      \n      \n      1. And there are numbererd lists too.\n      1. Use just 1s if you want!\n      1. And last but not least, let's not forget embedded images:\n      \n      > Block quote\n\n      ![React Logo w/ Text](public/logo192.png)`      \n    }\n    this.onEditing = this.onEditing.bind(this);\n  }\n\n  onEditing = (event) => {\n    this.setState({\n      inputText: event.target.value\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className=\"row mt-4\">\n            <div className=\"col-md-12 text-center\">\n              <h1>\n                <Badge className=\"text-align-center\" variant=\"dark\">Markdown Previewer</Badge>\n              </h1>\n            </div>\n            <div className=\"col-md-6\" id=\"editor-wrapper\">\n              <div className=\"col text-center\">\n                <h2>\n                  <Badge className=\"text-align-center\" variant=\"info\">Editor</Badge>\n                </h2>\n              </div>\n              <form>\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                  <Form.Control className=\"textAreaStyles\" as=\"textarea\" value={this.state.inputText} onChange={this.state.onEditing}/>\n                </Form.Group>\n              </form>\n            </div>\n            <div className=\"col-md-6\" id=\"preview-wrapper\">\n              <div className=\"col text-center\">\n                <h2>\n                  <Badge className=\"text-align-center\" variant=\"info\">Previewer</Badge>\n                </h2>\n              </div>\n              <div className=\"prevStyles\" dangerouslySetInnerHTML={{__html: marked(this.state.inputText)}} id=\"preview\">\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}